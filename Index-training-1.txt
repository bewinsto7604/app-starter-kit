An indexing problem would tend to show up as a high-CPU statement, so CPUTIME would be one indicator.  Also lack of an index would drive a tablespace scan, which would drive the GETPAGES value higher.  Unfortunately the metrics in STMT_STATISTICS do not track tablespace scans, so you have to look for GETPAGES being high and then consider whether the activity is against a table as an indicator that the table is being scanned.  But the dialog with rules that Jim & Chad were showing this morning is based on “Explain”, and does include the detection/reporting of tablespace scans—not by observing runtime behavior, but via feedback from Db2 Optimizer about the planned data access path.  I have put out a question to our team that provides the Explain capability to get some thoughts about how to externalize that information from dialog.

The Db2 EXPLAIN command sends its results to a set of tables in Db2 (Explain tables).  For Dynamic Explain as demonstrated today, the BMC Explain component, provided as part of SQL Explorer product and also called by other interested products, issues the EXPLAIN command, harvests the information from Explain tables, deletes the rows when harvested, and displays the screens we were seeing today.  In addition, users who bind a program (static SQL) in Db2 can specify EXPLAIN(YES), which would populate the Explain tables for posterity, such that an interested party can query the tables in Db2 to see what the Explain results were at time of bind.  The BMC Explain component also has “Static Explain”, which builds the same screen using the data in Explain tables as created during BIND.  